# syntax=docker/dockerfile:1
FROM nvcr.io/nvidia/pytorch:22.12-py3

# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Set environment variables for older GPU compatibility
ENV VLLM_CUDA_COMPAT=1
ENV TORCH_CUDA_ARCH_LIST=5.2
ENV CUDA_MODULE_LOADING=LAZY
ENV CUDA_VISIBLE_DEVICES="0,1,2,3"

# NCCL settings for debugging and compatibility
ENV NCCL_DEBUG=INFO
ENV NCCL_IB_DISABLE=1
ENV NCCL_ALGO=RING
ENV NCCL_PROTO=LL
ENV NCCL_MAX_NRINGS=1
ENV NCCL_BUFFSIZE=4194304
ENV NCCL_NET_GDR_READ=1
ENV NCCL_LAUNCH_MODE=PARALLEL

WORKDIR /python-docker

COPY requirements_titan.txt requirements_titan.txt

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    build-essential \
    poppler-utils \
    tesseract-ocr \
    libtesseract-dev \
    wget \
    && rm -rf /var/lib/apt/lists/*

RUN pip install -v autoawq
RUN pip install -v jupyter
RUN pip install -v transformers
RUN pip install -v huggingface_hub
RUN pip install -v psutil
RUN pip install -v mistral-inference
RUN pip install -v fschat

# Handle opencv separately to ensure proper uninstall/install
RUN pip uninstall -y opencv-python
RUN pip uninstall -y opencv-python-headless
RUN pip install -v opencv-python-headless==4.8.1.78

# Handle pynvml separately
RUN pip uninstall -y pynvml
RUN pip install -v nvidia-ml-py

RUN pip install -v vllm

# Install Python dependencies
RUN pip install --upgrade pip
RUN pip install pypdf python-multipart
RUN pip install -r requirements_titan.txt
RUN pip install tenacity

# Install pdf2image
RUN pip install pdf2image

# Install pytesseract
RUN pip install pytesseract

# Clean up
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

COPY . .

EXPOSE 8000
EXPOSE 80
EXPOSE 443

ENV NAME=World

# Set Tesseract data path
ENV TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata

RUN chmod +x start_service.sh

CMD ["./start_service.sh"]